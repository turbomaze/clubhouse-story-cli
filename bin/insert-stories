#!/usr/bin/env node

const fetch = require('node-fetch');
const fs = require('fs');
const config = require('../lib/config');
const { requestPassword } = require('../lib/index');

function main() {
  if (process.argv.length < 3) {
    console.log('Usage: ./bin/insert-stories stories.json');
    return;
  }

  const stories = JSON.parse(fs.readFileSync(process.argv[2]));
  requestPassword(config.tokenPrompt, token => insertStories(stories, token));
}

async function insertStories(stories, token) {
  // get the friendly names for each user
  const users = await getUsers(token);
  const usersByName = users.reduce((mapping, user) => {
    const name = user.profile.mention_name.toLowerCase();
    mapping[name] = user;
    return mapping;
  }, {});

  // stories.map(story => insertStory(story, token));
}

async function getUsers(token) {
  const url = getUrl('/members', token);
  const response = await fetch(url, {
    headers: {
      'Content-Type': 'application/json',
    },
  });
  return response.json();
}

async function insertStory(story, token) {
  const url = getUrl('/stories', token);
  const response = await fetch(url, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(story)
  });
  return response.json();
}

function getUrl(path, token) {
  return `${config.baseUrl}/api/v2${path}?token=${token}`;
}

main();
