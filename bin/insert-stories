#!/usr/bin/env node

const fs = require('fs');
const config = require('../lib/config');
const {
  fetchHelper,
  getUrl,
  insertStory,
  listToMap,
  requestPassword,
} = require('../lib/index');

function main() {
  if (process.argv.length < 3) {
    console.log('Usage: ./bin/insert-stories stories.json');
    return;
  }

  const stories = JSON.parse(fs.readFileSync(process.argv[2]));
  requestPassword(config.tokenPrompt, token => insertStories(stories, token));
}

async function insertStories(stories, token) {
  // get the friendly names for each user
  const users = await fetchHelper('/members', token);
  const usersByName = listToMap(users, user => user.profile.name.split(' ')[0].toLowerCase());
  const nameToId = user => usersByName[user.toLowerCase()].id;

  // get the friendly names for each project
  const projects = await fetchHelper('/projects', token);
  const projectsByName = listToMap(projects, project => project.name.toLowerCase());
  const projectToId = project => projectsByName[project.toLowerCase()].id;

  // replace the friendly names in ${stories} with ids
  const cleanedStories = stories.map(story => {
    return {
      ...story,
      project_id: projectToId(story.project_id),
      requested_by_id: nameToId(story.requested_by_id),
      owner_ids: story.owner_ids.map(nameToId),
    };
  });

  cleanedStories.map(story => insertStory(story, token));
}

main();
